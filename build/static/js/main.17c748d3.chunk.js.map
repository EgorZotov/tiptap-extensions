{"version":3,"sources":["components/Toolbar.tsx","components/Popover.tsx","extensions/columns/Column.tsx","extensions/columns/utils.ts","extensions/columns/ColumnBlock.tsx","components/RichTextEditor.tsx","index.tsx","data/content.ts"],"names":["Toolbar","editor","className","onClick","chain","focus","toggleBold","run","toggleItalic","toggleStrike","toggleCode","toggleHeading","level","setParagraph","toggleBulletList","toggleOrderedList","toggleCodeBlock","toggleBlockquote","setHorizontalRule","unsetColumns","insertColumns","Popover","Column","Node","create","name","group","content","isolating","selectable","renderHTML","HTMLAttributes","mergeAttributes","class","buildNode","type","buildParagraph","buildColumn","buildFilledColumnBlock","n","firstColumn","k","columns","undefined","i","column","push","buildColumnBlock","firstAncestorPos","state","selection","doc","$from","node","pos","index","forEach","childCount","sharedDepth","Error","ColumnBlock","addCommands","tr","dispatch","schema","columnBlock","newNode","NodeModel","fromJSON","setSelection","replaceSelectionWith","setColumns","nodes","canReplaceWith","resolvedPos","resolve","sel","NodeSelection","toJSON","deleteSelection","Document","topNode","RichTextEditor","editable","useEditor","extensions","StarterKit","configure","document","getText","JSON","stringify","getJSON","render","id","attrs","text","marks","getElementById"],"mappings":"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","file":"static/js/main.17c748d3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Editor } from \"@tiptap/react\";\r\nimport {\r\n  RiBold,\r\n  RiItalic,\r\n  RiStrikethrough,\r\n  RiCodeSSlashLine,\r\n  RiH1,\r\n  RiH2,\r\n  RiH3,\r\n  RiParagraph,\r\n  RiListOrdered,\r\n  RiListUnordered,\r\n  RiCodeBoxLine,\r\n  RiDoubleQuotesL,\r\n  RiSeparator,\r\n  RiLayoutColumnFill,\r\n  RiLayoutColumnLine\r\n} from \"react-icons/ri\";\r\n\r\nimport \"./Toolbar.scss\";\r\n\r\ntype ToolbarProps = {\r\n  editor: Editor;\r\n};\r\n\r\nfunction Toolbar({ editor }: ToolbarProps) {\r\n  return (\r\n    <div\r\n      className={\"ToolbarContainer\"}\r\n    >\r\n      <div className=\"Toolbar\">\r\n        <div\r\n          className=\"icon\"\r\n          onClick={() => editor.chain().focus().toggleBold().run()}\r\n        >\r\n          <RiBold />\r\n        </div>\r\n        <div\r\n          className=\"icon\"\r\n          onClick={() => editor.chain().focus().toggleItalic().run()}\r\n        >\r\n          <RiItalic />\r\n        </div>\r\n        <div\r\n          className=\"icon\"\r\n          onClick={() => editor.chain().focus().toggleStrike().run()}\r\n        >\r\n          <RiStrikethrough />\r\n        </div>\r\n        <div\r\n          className=\"icon\"\r\n          onClick={() => editor.chain().focus().toggleCode().run()}\r\n        >\r\n          <RiCodeSSlashLine />\r\n        </div>\r\n        <div className=\"divider\"></div>\r\n        <div\r\n          className=\"icon\"\r\n          onClick={() =>\r\n            editor.chain().focus().toggleHeading({ level: 1 }).run()\r\n          }\r\n        >\r\n          <RiH1 />\r\n        </div>\r\n        <div\r\n          className=\"icon\"\r\n          onClick={() =>\r\n            editor.chain().focus().toggleHeading({ level: 2 }).run()\r\n          }\r\n        >\r\n          <RiH2 />\r\n        </div>\r\n        <div\r\n          className=\"icon\"\r\n          onClick={() =>\r\n            editor.chain().focus().toggleHeading({ level: 3 }).run()\r\n          }\r\n        >\r\n          <RiH3 />\r\n        </div>\r\n        <div\r\n          className=\"icon\"\r\n          onClick={() => editor.chain().focus().setParagraph().run()}\r\n        >\r\n          <RiParagraph />\r\n        </div>\r\n        <div\r\n          className=\"icon\"\r\n          onClick={() => editor.chain().focus().toggleBulletList().run()}\r\n        >\r\n          <RiListOrdered />\r\n        </div>\r\n        <div\r\n          className=\"icon\"\r\n          onClick={() => editor.chain().focus().toggleOrderedList().run()}\r\n        >\r\n          <RiListUnordered />\r\n        </div>\r\n        <div\r\n          className=\"icon\"\r\n          onClick={() => editor.chain().focus().toggleCodeBlock().run()}\r\n        >\r\n          <RiCodeBoxLine />\r\n        </div>\r\n        <div className=\"divider\"></div>\r\n        <div\r\n          className=\"icon\"\r\n          onClick={() => editor.chain().focus().toggleBlockquote().run()}\r\n        >\r\n          <RiDoubleQuotesL />\r\n        </div>\r\n        <div\r\n          className=\"icon\"\r\n          onClick={() => editor.chain().focus().setHorizontalRule().run()}\r\n        >\r\n          <RiSeparator />\r\n        </div>\r\n        <div\r\n          className=\"icon\"\r\n          onClick={() => editor.chain().focus().unsetColumns().run()}\r\n        >\r\n          <RiLayoutColumnFill />\r\n        </div>\r\n        <div\r\n          className=\"icon\"\r\n          onClick={() => editor.chain().focus().insertColumns(3).run()}\r\n        >\r\n          <RiLayoutColumnLine />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { Toolbar };\r\n","import React from \"react\";\r\nimport { BubbleMenu, Editor } from \"@tiptap/react\";\r\nimport {\r\n  RiBold,\r\n  RiItalic,\r\n  RiStrikethrough,\r\n  RiH1,\r\n  RiH2,\r\n  RiCodeSSlashLine\r\n} from \"react-icons/ri\";\r\n\r\nimport \"./Popover.scss\";\r\n\r\ntype PopoverProps = {\r\n  editor: Editor;\r\n};\r\n\r\nfunction Popover({ editor }: PopoverProps) {\r\n  return (\r\n    <BubbleMenu className=\"Popover\" editor={editor}>\r\n      <div\r\n        className=\"icon\"\r\n        onClick={() => editor.chain().focus().toggleBold().run()}\r\n      >\r\n        <RiBold />\r\n      </div>\r\n      <div\r\n        className=\"icon\"\r\n        onClick={() => editor.chain().focus().toggleItalic().run()}\r\n      >\r\n        <RiItalic />\r\n      </div>\r\n      <div\r\n        className=\"icon\"\r\n        onClick={() => editor.chain().focus().toggleStrike().run()}\r\n      >\r\n        <RiStrikethrough />\r\n      </div>\r\n      <div\r\n        className=\"icon\"\r\n        onClick={() => editor.chain().focus().toggleHeading({ level: 1 }).run()}\r\n      >\r\n        <RiH1 />\r\n      </div>\r\n      <div\r\n        className=\"icon\"\r\n        onClick={() => editor.chain().focus().toggleHeading({ level: 2 }).run()}\r\n      >\r\n        <RiH2 />\r\n      </div>\r\n      <div\r\n        className=\"icon\"\r\n        onClick={() => editor.chain().focus().toggleCode().run()}\r\n      >\r\n        <RiCodeSSlashLine />\r\n      </div>\r\n    </BubbleMenu>\r\n  );\r\n}\r\n\r\nexport { Popover };\r\n","import { Node, mergeAttributes } from \"@tiptap/core\";\n\nexport const Column = Node.create({\n  name: \"column\",\n  group: \"column\",\n  content: \"(paragraph|block)*\",\n  isolating: true,\n  selectable: false,\n\n  renderHTML({ HTMLAttributes }) {\n    const attrs = mergeAttributes(HTMLAttributes, { class: \"column\" });\n    return [\"div\", attrs, 0];\n  }\n});\n\n","import { EditorState } from \"prosemirror-state\";\nimport { Node } from \"prosemirror-model\";\nimport { JSONContent } from \"@tiptap/core\";\n\nexport const buildNode = ({type, content}: JSONContent): JSONContent => {\n  if (content) {\n    return { type, content };\n  }\n  return { type };\n};\n\nexport const buildParagraph = ({content}: Partial<JSONContent>) => buildNode({type: \"paragraph\", content});\n\nexport const buildColumn = ({content}: Partial<JSONContent>) => buildNode({type: \"column\", content});\n\nexport const buildColumnBlock = ({content}: Partial<JSONContent>) => buildNode({type: \"columnBlock\", content});\n\ninterface buildFilledColumnBlockProps {\n    n: number;\n    firstColumn?: JSONContent;\n}\n\nexport const buildFilledColumnBlock = ({ n ,firstColumn }: buildFilledColumnBlockProps) => {\n  let k = 0;\n  let columns: Array<JSONContent> = [];\n  if (firstColumn !== undefined) {\n    k = 1;\n    columns = [firstColumn];\n  }\n  for (let i = 0; i < n - k; i++) {\n    const column = buildColumn({content: [buildParagraph({})]});\n    columns.push(column);\n  }\n  const columnBlock = buildColumnBlock({ content: columns });\n  return columnBlock;\n};\n\ninterface firstAncestorPosReturnType {\n    pos: number;\n    node: Node;\n    index: number;\n}\n\nexport const firstAncestorPos = (state: EditorState) => {\n  const { selection, doc } = state;\n  const { $from } = selection;\n  \n  let firstAncestorPos: firstAncestorPosReturnType = { node: new Node(), pos: -1, index: -1 };\n  doc.forEach((node, pos, index) => {\n    if (pos === $from.pos) {\n      firstAncestorPos = { node, pos, index };\n      return false;\n    }\n\n    if (node.childCount === 0) {\n      return false;\n    }\n\n    if ($from.sharedDepth(pos + 1) > 0) {\n      firstAncestorPos = { node, pos, index };\n    }\n    return false;\n  });\n  \n  if (firstAncestorPos.pos === -1) {\n      throw Error()\n  }\n  \n  return firstAncestorPos;\n};\n","import { Node, mergeAttributes } from \"@tiptap/core\";\nimport { NodeSelection } from \"prosemirror-state\";\nimport { Node as NodeModel } from \"prosemirror-model\";\nimport { buildColumn, buildFilledColumnBlock, firstAncestorPos } from \"./utils\";\n\nexport const ColumnBlock = Node.create({\n  name: \"columnBlock\",\n  group: \"layout\",\n  content: \"column{2,}\",\n  isolating: true,\n  selectable: true,\n\n  renderHTML({ HTMLAttributes }) {\n    const attrs = mergeAttributes(HTMLAttributes, { class: \"column-block\" });\n    return [\"div\", attrs, 0];\n  },\n\n  addCommands() {\n    return {\n      insertColumns: (n: number) => ({ state, tr, dispatch }) => {\n        if (!dispatch) {\n            return;\n        }\n        \n        const { schema, selection } = state;\n        const columnBlock = buildFilledColumnBlock({n});\n        const newNode = NodeModel.fromJSON(schema, columnBlock);\n\n        return dispatch(\n          tr.setSelection(selection).replaceSelectionWith(newNode)\n        );\n      },\n      setColumns: (n: number) => ({ state, tr, dispatch }) => {\n        if (!dispatch) {\n            return;\n        }\n        \n        const { schema, doc } = state;\n        const { node, pos, index } = firstAncestorPos(state);\n\n        const type = schema.nodes[this.name];\n        if (!doc.canReplaceWith(index, index, type)) {\n          return false;\n        }\n\n        const resolvedPos = tr.doc.resolve(pos);\n        const sel = new NodeSelection(resolvedPos);\n\n        const firstColumn = buildColumn({content: [node.toJSON()]});\n        const columnBlock = buildFilledColumnBlock({n, firstColumn});\n        const newNode = NodeModel.fromJSON(schema, columnBlock);\n\n        return dispatch(tr.setSelection(sel).replaceSelectionWith(newNode));\n      },\n      unsetColumns: () => ({ state, tr, dispatch }) => {\n        if (!dispatch) {\n            return;\n        }\n        \n        const { node, pos } = firstAncestorPos(state);\n        if (node.type.name !== this.name) {\n          return;\n        }\n\n        const resolvedPos = tr.doc.resolve(pos);\n        const sel = new NodeSelection(resolvedPos);\n        return dispatch(tr.setSelection(sel).deleteSelection());\n      }\n    };\n  }\n});\n","import React from \"react\";\r\nimport { Node, Content } from \"@tiptap/core\";\r\nimport { useEditor, EditorContent } from \"@tiptap/react\";\r\nimport StarterKit from \"@tiptap/starter-kit\";\r\n\r\nimport { Toolbar } from \"./Toolbar\";\r\nimport { Popover } from \"./Popover\";\r\nimport { Column, ColumnBlock } from \"../extensions\";\r\n\r\nimport \"./RichTextEditor.scss\";\r\n\r\ntype RichTextEditorProps = {\r\n  content?: Content;\r\n  editable?: boolean;\r\n};\r\n\r\nconst Document = Node.create({\r\n  name: \"doc\",\r\n  topNode: true,\r\n  content: \"(block|layout)+\"\r\n});\r\n\r\nfunction RichTextEditor({ content = \"\", editable = true }: RichTextEditorProps) {\r\n  const editor = useEditor({\r\n    content,\r\n    extensions: [\r\n      Document,\r\n      StarterKit.configure({ document: false }),\r\n      Column,\r\n      ColumnBlock\r\n    ],\r\n    editable\r\n  });\r\n\r\n  if (!editor) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"WhiteCard\">\r\n        <Toolbar editor={editor} />\r\n        <Popover editor={editor} />\r\n        <EditorContent editor={editor} />\r\n      </div>\r\n      <h2>Text</h2>\r\n      <div className=\"WhiteCard\">\r\n        <pre>{editor.getText()}</pre>\r\n      </div>\r\n      <h2>JSON</h2>\r\n      <div className=\"WhiteCard\">\r\n        <pre>{JSON.stringify(editor.getJSON())}</pre>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport { RichTextEditor };\r\n","import React from \"react\";\nimport { render } from \"react-dom\";\n\nimport { RichTextEditor } from \"./components\";\n\nimport { BASIC_CONTENT } from \"./data\";\n\nimport \"./index.scss\";\n\nrender(\n  <div id=\"Wrapper\">\n    <RichTextEditor\n      content={BASIC_CONTENT}\n    />\n  </div>,\n  document.getElementById(\"root\")\n);\n","export const BASIC_CONTENT = {\r\n  type: \"doc\",\r\n  content: [\r\n    {\r\n      type: \"heading\",\r\n      attrs: { level: 2 },\r\n      content: [{ type: \"text\", text: \"Hi there,\" }]\r\n    },\r\n    {\r\n      type: \"paragraph\",\r\n      content: [\r\n        { type: \"text\", text: \"This is a \" },\r\n        { type: \"text\", marks: [{ type: \"italic\" }], text: \"basic\" },\r\n        { type: \"text\", text: \" example of \" },\r\n        { type: \"text\", marks: [{ type: \"bold\" }], text: \"tiptap\" },\r\n        {\r\n          type: \"text\",\r\n          text:\r\n            \". Sure, there are all kind of basic text styles you’d probably expect from a text editor. But wait until you see the lists:\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      type: \"bulletList\",\r\n      content: [\r\n        {\r\n          type: \"listItem\",\r\n          content: [\r\n            {\r\n              type: \"paragraph\",\r\n              content: [\r\n                { type: \"text\", text: \"That’s a bullet list with one …\" }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          type: \"listItem\",\r\n          content: [\r\n            {\r\n              type: \"paragraph\",\r\n              content: [{ type: \"text\", text: \"… or two list items.\" }]\r\n            },\r\n            {\r\n              type: \"bulletList\",\r\n              content: [\r\n                {\r\n                  type: \"listItem\",\r\n                  content: [\r\n                    {\r\n                      type: \"paragraph\",\r\n                      content: [{ type: \"text\", text: \"Sub-item 1\" }]\r\n                    }\r\n                  ]\r\n                },\r\n                {\r\n                  type: \"listItem\",\r\n                  content: [\r\n                    {\r\n                      type: \"paragraph\",\r\n                      content: [{ type: \"text\", text: \"Sub-item 2\" }]\r\n                    }\r\n                  ]\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      type: \"blockquote\",\r\n      content: [\r\n        {\r\n          type: \"paragraph\",\r\n          content: [\r\n            { type: \"text\", text: \"Wow, that’s amazing. Good work, boy! \" },\r\n            { type: \"hardBreak\" },\r\n            { type: \"text\", text: \"— Mom\" }\r\n          ]\r\n        }\r\n      ]\r\n    },\r\n    { type: \"paragraph\" },\r\n    {\r\n      type: \"columnBlock\",\r\n      content: [\r\n        {\r\n          type: \"column\",\r\n          content: [\r\n            { type: \"paragraph\", content: [{ type: \"text\", text: \"First column\" }] },\r\n            { type: \"paragraph\", content: [{ type: \"text\", text: \"with 2 paragraphs\" }] },\r\n            {\r\n              type: \"bulletList\",\r\n              content: [\r\n                {\r\n                  type: \"listItem\",\r\n                  content: [\r\n                    {\r\n                      type: \"paragraph\",\r\n                      content: [\r\n                        { type: \"text\", text: \"And even a list…\" }\r\n                      ]\r\n                    }\r\n                  ]\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          type: \"column\",\r\n          content: [\r\n            { type: \"paragraph\", content: [{ type: \"text\", text: \"Second column\" }] }\r\n          ]\r\n        },\r\n        {\r\n          type: \"column\",\r\n          content: [\r\n            { type: \"paragraph\", content: [{ type: \"text\", text: \"Third columns\" }] }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n};\r\n"],"sourceRoot":""}